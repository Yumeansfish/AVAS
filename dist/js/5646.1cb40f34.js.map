{"version":3,"file":"js/5646.1cb40f34.js","mappings":"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","sources":["webpack://aw-webui/./node_modules/lodash/fp/sortBy.js","webpack://aw-webui/./node_modules/lodash/fp/reverse.js","webpack://aw-webui/./node_modules/lodash/fp/filter.js","webpack://aw-webui/./src/stores/categories.ts","webpack://aw-webui/./node_modules/lodash/_baseHas.js","webpack://aw-webui/./node_modules/lodash/sumBy.js","webpack://aw-webui/./node_modules/lodash/sortBy.js","webpack://aw-webui/./node_modules/lodash/fp/values.js","webpack://aw-webui/./node_modules/lodash/_baseSum.js","webpack://aw-webui/./node_modules/lodash/fp/groupBy.js","webpack://aw-webui/./node_modules/lodash/zipObject.js","webpack://aw-webui/./node_modules/lodash/uniqBy.js","webpack://aw-webui/./node_modules/lodash/_baseZipObject.js","webpack://aw-webui/./node_modules/lodash/has.js","webpack://aw-webui/./node_modules/lodash/fp/map.js","webpack://aw-webui/./node_modules/lodash/_baseRest.js","webpack://aw-webui/./node_modules/lodash/reverse.js","webpack://aw-webui/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://aw-webui/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://aw-webui/./src/util/fakedata.js","webpack://aw-webui/./src/stores/activity.ts","webpack://aw-webui/./node_modules/lodash/fp/flow.js","webpack://aw-webui/./node_modules/lodash/fp/_falseOptions.js"],"sourcesContent":["var convert = require('./convert'),\n    func = convert('sortBy', require('../sortBy'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('reverse', require('../reverse'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('filter', require('../filter'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","import _ from 'lodash';\nimport { saveClasses, loadClasses, cleanCategory, defaultCategories, build_category_hierarchy, createMissingParents, annotate, } from '~/util/classes';\nimport { getColorFromCategory } from '~/util/color';\nimport { defineStore } from 'pinia';\nfunction getScoreFromCategory(c, allCats) {\n    // Returns the score for a certain category, falling back to parents if none set\n    // Very similar to getColorFromCategory\n    if (c && c.data && c.data.score) {\n        return c.data.score;\n    }\n    else if (c && c.name.slice(0, -1).length > 0) {\n        // If no color is set on category, traverse parents until one is found\n        const parent = c.name.slice(0, -1);\n        const parentCat = allCats.find(cc => _.isEqual(cc.name, parent));\n        return getScoreFromCategory(parentCat, allCats);\n    }\n    else {\n        return 0;\n    }\n}\nexport const useCategoryStore = defineStore('categories', {\n    state: () => ({\n        classes: [],\n        classes_unsaved_changes: false,\n    }),\n    // getters\n    getters: {\n        classes_clean() {\n            return this.classes.map(cleanCategory);\n        },\n        classes_hierarchy() {\n            const hier = build_category_hierarchy(_.cloneDeep(this.classes));\n            return _.sortBy(hier, [c => c.id || 0]);\n        },\n        classes_for_query() {\n            return this.classes\n                .filter(c => c.rule.type !== null)\n                .map(c => {\n                return [c.name, c.rule];\n            });\n        },\n        all_categories() {\n            // Returns a list of category names (a list of list of strings)\n            return _.uniqBy(_.flatten(this.classes.map((c) => {\n                const l = [];\n                for (let i = 1; i <= c.name.length; i++) {\n                    l.push(c.name.slice(0, i));\n                }\n                return l;\n            })), (v) => v.join('>>>>') // Can be any separator that doesn't appear in the category names themselves\n            );\n        },\n        allCategoriesSelect() {\n            const categories = this.all_categories;\n            const entries = categories.map(c => {\n                return { text: c.join(' > '), value: c, id: c.id };\n            });\n            return _.sortBy(entries, 'text');\n        },\n        get_category() {\n            return (category_arr) => {\n                if (typeof category_arr === 'string' || category_arr instanceof String)\n                    console.error('Passed category was string, expected array. Lookup will fail.');\n                const match = this.classes.find(c => _.isEqual(c.name, category_arr));\n                if (!match) {\n                    if (!_.isEqual(category_arr, ['Uncategorized']))\n                        console.error(\"Couldn't find category: \", category_arr);\n                    // fallback\n                    return { name: ['Uncategorized'], rule: { type: 'none' } };\n                }\n                return annotate(_.cloneDeep(match));\n            };\n        },\n        get_category_by_id() {\n            return (id) => {\n                return annotate(_.cloneDeep(this.classes.find((c) => c.id == id)));\n            };\n        },\n        get_category_color() {\n            return (cat) => {\n                return getColorFromCategory(this.get_category(cat), this.classes);\n            };\n        },\n        get_category_score() {\n            return (cat) => {\n                return getScoreFromCategory(this.get_category(cat), this.classes);\n            };\n        },\n        category_select() {\n            return (insertMeta) => {\n                // Useful for <select> elements enumerating categories\n                let cats = this.all_categories;\n                cats = cats\n                    .map((c) => {\n                    return { text: c.join(' > '), value: c };\n                })\n                    .sort((a, b) => a.text > b.text);\n                if (insertMeta) {\n                    cats = [\n                        { text: 'All', value: null },\n                        { text: 'Uncategorized', value: ['Uncategorized'] },\n                    ].concat(cats);\n                }\n                return cats;\n            };\n        },\n    },\n    actions: {\n        load(classes = null) {\n            if (classes === null) {\n                classes = loadClasses();\n            }\n            classes = createMissingParents(classes);\n            let i = 0;\n            this.classes = classes.map(c => Object.assign(c, { id: i++ }));\n            this.classes_unsaved_changes = false;\n        },\n        save() {\n            const r = saveClasses(this.classes);\n            this.classes_unsaved_changes = false;\n            return r;\n        },\n        // mutations\n        import(classes) {\n            let i = 0;\n            // overwrite id even if already set\n            this.classes = classes.map(c => Object.assign(c, { id: i++ }));\n            this.classes_unsaved_changes = true;\n        },\n        updateClass(new_class) {\n            console.log('Updating class:', new_class);\n            const old_class = this.classes.find((c) => c.id === new_class.id);\n            const old_name = old_class.name;\n            const parent_depth = old_class.name.length;\n            if (new_class.id === undefined || new_class.id === null) {\n                new_class.id = _.max(_.map(this.classes, 'id')) + 1;\n                this.classes.push(new_class);\n            }\n            else {\n                Object.assign(old_class, new_class);\n            }\n            // When a parent category is renamed, we also need to rename the children\n            _.map(this.classes, c => {\n                if (_.isEqual(old_name, c.name.slice(0, parent_depth))) {\n                    c.name = new_class.name.concat(c.name.slice(parent_depth));\n                    console.log('Renamed child:', c.name);\n                }\n            });\n            this.classes_unsaved_changes = true;\n        },\n        addClass(new_class) {\n            new_class.id = _.max(_.map(this.classes, 'id')) + 1;\n            this.classes.push(new_class);\n            this.classes_unsaved_changes = true;\n        },\n        removeClass(classId) {\n            this.classes = this.classes.filter((c) => c.id !== classId);\n            this.classes_unsaved_changes = true;\n        },\n        appendClassRule(classId, pattern) {\n            const cat = this.classes.find((c) => c.id === classId);\n            if (cat.rule.type === 'none' || cat.rule.type === null) {\n                cat.rule.type = 'regex';\n                cat.rule.regex = pattern;\n            }\n            else if (cat.rule.type === 'regex') {\n                cat.rule.regex += '|' + pattern;\n            }\n            this.classes_unsaved_changes = true;\n        },\n        restoreDefaultClasses() {\n            let i = 0;\n            this.classes = createMissingParents(defaultCategories).map(c => Object.assign(c, { id: i++ }));\n            this.classes_unsaved_changes = true;\n        },\n        clearAll() {\n            this.classes = [];\n            this.classes_unsaved_changes = true;\n        },\n    },\n});\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;\n","var baseIteratee = require('./_baseIteratee'),\n    baseSum = require('./_baseSum');\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee, 2))\n    : 0;\n}\n\nmodule.exports = sumBy;\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","var convert = require('./convert'),\n    func = convert('values', require('../values'), require('./_falseOptions'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","var convert = require('./convert'),\n    func = convert('groupBy', require('../groupBy'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var assignValue = require('./_assignValue'),\n    baseZipObject = require('./_baseZipObject');\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nmodule.exports = zipObject;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nmodule.exports = baseZipObject;\n","var baseHas = require('./_baseHas'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;\n","var convert = require('./convert'),\n    func = convert('map', require('../map'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeReverse = arrayProto.reverse;\n\n/**\n * Reverses `array` so that the first element becomes the last, the second\n * element becomes the second to last, and so on.\n *\n * **Note:** This method mutates `array` and is based on\n * [`Array#reverse`](https://mdn.io/Array/reverse).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.reverse(array);\n * // => [3, 2, 1]\n *\n * console.log(array);\n * // => [3, 2, 1]\n */\nfunction reverse(array) {\n  return array == null ? array : nativeReverse.call(array);\n}\n\nmodule.exports = reverse;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export const window_events = [\n  {\n    duration: 32.1 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'ActivityWatch/activitywatch: Track how you spend your time - Mozilla Firefox',\n      url: 'https://github.com/ActivityWatch/activitywatch',\n      $category: ['Work', 'Programming', 'ActivityWatch'],\n    },\n  },\n  {\n    duration: 14.6 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'Inbox - Gmail - Mozilla Firefox',\n      url: 'https://mail.google.com',\n      $category: ['Comms', 'Email'],\n    },\n  },\n  {\n    duration: 0.2 * 60 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'reddit: the front page of the internet - Mozilla Firefox',\n      url: 'https://reddit.com',\n      $category: ['Media', 'Social Media'],\n    },\n  },\n  {\n    duration: 0.2 * 60 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'YouTube - Mozilla Firefox',\n      url: 'https://youtube.com',\n      $category: ['Media', 'Video'],\n    },\n  },\n  {\n    duration: 0.15 * 60 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'Home / Twitter - Mozilla Firefox',\n      url: 'https://twitter.com',\n      $category: ['Media', 'Social Media'],\n    },\n  },\n  {\n    duration: 0.15 * 60 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'Stack Overflow',\n      url: 'https://stackoverflow.com',\n      $category: ['Work', 'Programming'],\n    },\n  },\n  {\n    duration: 48.2 * 60,\n    data: {\n      app: 'Terminal',\n      title: 'vim ~/code/activitywatch/aw-server/aw-webui/src',\n      $category: ['Work', 'Programming', 'ActivityWatch'],\n    },\n  },\n  {\n    duration: 12.6 * 60,\n    data: {\n      app: 'Terminal',\n      title: 'bash ~/code/activitywatch',\n      $category: ['Work', 'Programming', 'ActivityWatch'],\n    },\n  },\n  {\n    duration: 58.1 * 60,\n    data: {\n      app: 'zoom',\n      title: 'Zoom Meeting',\n      $category: ['Comms', 'Video Conferencing'],\n    },\n  },\n  {\n    duration: 0.4 * 60 * 60,\n    data: { app: 'Minecraft', title: 'Minecraft', $category: ['Media', 'Games'] },\n  },\n  {\n    duration: 3.15 * 60,\n    data: { app: 'Spotify', title: 'Spotify', $category: ['Media', 'Music'] },\n  },\n];\n","import { defineStore } from 'pinia';\nimport moment from 'moment';\nimport * as _ from 'lodash';\nimport { map, filter, values, groupBy, sortBy, flow, reverse } from 'lodash/fp';\nimport { window_events } from '~/util/fakedata';\nimport queries from '~/queries';\nimport { get_day_start_with_offset } from '~/util/time';\nimport { dateToTimeperiod, timeperiodToStr, timeperiodsHoursOfPeriod, timeperiodsDaysOfPeriod, timeperiodsMonthsOfPeriod, timeperiodsAroundTimeperiod, } from '~/util/timeperiod';\nimport { useSettingsStore } from '~/stores/settings';\nimport { useBucketsStore } from '~/stores/buckets';\nimport { useCategoryStore } from '~/stores/categories';\nimport { getClient } from '~/util/awclient';\nfunction timeperiodsStrsHoursOfPeriod(timeperiod) {\n    return timeperiodsHoursOfPeriod(timeperiod).map(timeperiodToStr);\n}\nfunction timeperiodsStrsDaysOfPeriod(timeperiod) {\n    return timeperiodsDaysOfPeriod(timeperiod).map(timeperiodToStr);\n}\nfunction timeperiodsStrsMonthsOfPeriod(timeperiod) {\n    return timeperiodsMonthsOfPeriod(timeperiod).map(timeperiodToStr);\n}\nfunction timeperiodStrsAroundTimeperiod(timeperiod) {\n    return timeperiodsAroundTimeperiod(timeperiod).map(timeperiodToStr);\n}\nfunction colorCategories(events) {\n    // Set $color for categories\n    const categoryStore = useCategoryStore();\n    return events.map((e) => {\n        e.data['$color'] = categoryStore.get_category_color(e.data['$category']);\n        return e;\n    });\n}\nfunction scoreCategories(events) {\n    // Set $score for categories\n    const categoryStore = useCategoryStore();\n    return events.map((e) => {\n        e.data['$score'] = categoryStore.get_category_score(e.data['$category']);\n        return e;\n    });\n}\nexport const useActivityStore = defineStore('activity', {\n    // initial state\n    state: () => ({\n        // set to true once loading has started\n        loaded: false,\n        window: {\n            available: false,\n            top_apps: [],\n            top_titles: [],\n        },\n        browser: {\n            available: false,\n            duration: 0,\n            top_domains: [],\n            top_urls: [],\n            top_titles: [],\n        },\n        editor: {\n            available: false,\n            duration: 0,\n            top_files: [],\n            top_languages: [],\n            top_projects: [],\n        },\n        category: {\n            available: false,\n            by_period: [],\n            top: [],\n        },\n        active: {\n            available: false,\n            duration: 0,\n            // non-afk events (no detail data) for the current period\n            events: [],\n            // Aggregated events for current and past periods\n            history: {},\n        },\n        android: {\n            available: false,\n        },\n        stopwatch: {\n            available: false,\n            top_stopwatches: [],\n        },\n        query_options: null,\n        buckets: {\n            loaded: false,\n            afk: [],\n            window: [],\n            editor: [],\n            browser: [],\n            android: [],\n            stopwatch: [],\n        },\n    }),\n    getters: {\n        getActiveHistoryAroundTimeperiod() {\n            return (timeperiod) => {\n                const periods = timeperiodStrsAroundTimeperiod(timeperiod);\n                const _history = periods.map(tp => {\n                    if (_.has(this.active.history, tp)) {\n                        return this.active.history[tp];\n                    }\n                    else {\n                        // A zero-duration placeholder until new data has been fetched\n                        return [{ timestamp: moment(tp.split('/')[0]).format(), duration: 0, data: {} }];\n                    }\n                });\n                return _history;\n            };\n        },\n        uncategorizedDuration() {\n            // Returns the uncategorized duration and the total duration\n            if (!this.category.top) {\n                return null;\n            }\n            const uncategorized = this.category.top.filter(e => {\n                return _.isEqual(e.data['$category'], ['Uncategorized']);\n            });\n            const uncategorized_duration = uncategorized.length > 0 ? uncategorized[0].duration : 0;\n            const total_duration = this.category.top.reduce((acc, e) => {\n                return acc + e.duration;\n            }, 0);\n            return [uncategorized_duration, total_duration];\n        },\n    },\n    actions: {\n        async ensure_loaded(query_options) {\n            const settingsStore = useSettingsStore();\n            await settingsStore.ensureLoaded();\n            const bucketsStore = useBucketsStore();\n            console.info('Query options: ', query_options);\n            if (this.loaded) {\n                getClient().abort();\n            }\n            if (!this.loaded || this.query_options !== query_options || query_options.force) {\n                this.start_loading(query_options);\n                if (!query_options.timeperiod) {\n                    query_options.timeperiod = dateToTimeperiod(query_options.date, settingsStore.startOfDay);\n                }\n                await bucketsStore.ensureLoaded();\n                await this.get_buckets(query_options);\n                // TODO: These queries can actually run in parallel, but since server won't process them in parallel anyway we won't.\n                this.set_available();\n                if (this.window.available) {\n                    console.info(settingsStore.useMultidevice ? 'Querying multiple devices' : 'Querying a single device');\n                    if (settingsStore.useMultidevice) {\n                        const hostnames = bucketsStore.hosts.filter(\n                        // require that the host has window buckets,\n                        // and that the host is not a fakedata host,\n                        // unless we're explicitly querying fakedata\n                        host => host &&\n                            bucketsStore.bucketsWindow(host).length > 0 &&\n                            (!host.startsWith('fakedata') || query_options.host.startsWith('fakedata')));\n                        console.info('Including hosts in multiquery: ', hostnames);\n                        await this.query_multidevice_full(query_options, hostnames);\n                    }\n                    else {\n                        await this.query_desktop_full(query_options);\n                    }\n                }\n                else if (this.android.available) {\n                    await this.query_android(query_options);\n                }\n                else {\n                    console.log('Cannot query windows as we are missing either an afk/window bucket pair or an android bucket');\n                    this.query_window_completed();\n                    this.query_category_time_by_period_completed();\n                }\n                if (this.active.available) {\n                    await this.query_active_history(query_options);\n                }\n                else if (this.android.available) {\n                    await this.query_active_history_android(query_options);\n                }\n                else {\n                    console.log('Cannot call query_active_history as we do not have an afk bucket');\n                    await this.query_active_history_completed();\n                }\n                if (this.editor.available) {\n                    await this.query_editor(query_options);\n                }\n                else {\n                    console.log('Cannot call query_editor as we do not have any editor buckets');\n                    await this.query_editor_completed();\n                }\n                // Perform this last, as it takes the longest\n                if (this.window.available || this.android.available) {\n                    await this.query_category_time_by_period(query_options);\n                }\n            }\n            else {\n                console.warn('ensure_loaded called twice with same query_options but without query_options.force = true, skipping...');\n            }\n        },\n        async query_android({ timeperiod, filter_categories }) {\n            const periods = [timeperiodToStr(timeperiod)];\n            const categoryStore = useCategoryStore();\n            const q = queries.appQuery(this.buckets.android[0], categoryStore.classes_for_query, filter_categories);\n            const data = await getClient().query(periods, q).catch(this.errorHandler);\n            this.query_window_completed(data[0]);\n        },\n        async reset() {\n            getClient().abort();\n            this.query_window_completed({});\n            this.query_browser_completed({});\n            this.query_editor_completed({});\n            this.query_category_time_by_period_completed({});\n        },\n        async query_multidevice_full({ timeperiod, filter_categories, filter_afk, always_active_pattern }, hosts) {\n            const periods = [timeperiodToStr(timeperiod)];\n            const categories = useCategoryStore().classes_for_query;\n            const q = queries.multideviceQuery({\n                hosts,\n                filter_afk,\n                categories,\n                filter_categories,\n                host_params: {},\n                always_active_pattern,\n            });\n            const data = await getClient().query(periods, q, { name: 'multidevice', verbose: true });\n            this.query_window_completed(data[0].window);\n        },\n        async query_desktop_full({ timeperiod, filter_categories, filter_afk, include_audible, include_stopwatch, always_active_pattern, }) {\n            const periods = [timeperiodToStr(timeperiod)];\n            const categories = useCategoryStore().classes_for_query;\n            const q = queries.fullDesktopQuery({\n                bid_window: this.buckets.window[0],\n                bid_afk: this.buckets.afk[0],\n                bid_browsers: this.buckets.browser,\n                bid_stopwatch: include_stopwatch && this.buckets.stopwatch.length > 0\n                    ? this.buckets.stopwatch[0]\n                    : undefined,\n                filter_afk,\n                categories,\n                filter_categories,\n                include_audible,\n                always_active_pattern,\n            });\n            const data = await getClient().query(periods, q, {\n                name: 'fullDesktopQuery',\n                verbose: true,\n            });\n            this.query_window_completed(data[0].window);\n            this.query_browser_completed(data[0].browser);\n            if (include_stopwatch) {\n                this.query_stopwatch_completed(data[0].stopwatch);\n            }\n        },\n        async query_editor({ timeperiod }) {\n            const periods = [timeperiodToStr(timeperiod)];\n            const q = queries.editorActivityQuery(this.buckets.editor);\n            const data = await getClient().query(periods, q, {\n                name: 'editorActivityQuery',\n                verbose: true,\n            });\n            this.query_editor_completed(data[0]);\n        },\n        async query_active_history({ timeperiod, ...query_options }) {\n            const settingsStore = useSettingsStore();\n            const bucketsStore = useBucketsStore();\n            // Filter out periods that are already in the history, and that are in the future\n            const periods = timeperiodStrsAroundTimeperiod(timeperiod).filter(tp_str => {\n                return (!_.includes(this.active.history, tp_str) && new Date(tp_str.split('/')[0]) < new Date());\n            });\n            let afk_buckets = [];\n            if (settingsStore.useMultidevice) {\n                // get all hostnames that qualify for the multidevice query\n                const hostnames = bucketsStore.hosts.filter(\n                // require that the host has afk buckets,\n                // and that the host is not a fakedata host,\n                // unless we're explicitly querying fakedata\n                host => host &&\n                    bucketsStore.bucketsAFK(host).length > 0 &&\n                    (!host.startsWith('fakedata') || query_options.host.startsWith('fakedata')));\n                // get all afk buckets for all hosts\n                afk_buckets = _.flatten(hostnames.map(bucketsStore.bucketsAFK));\n            }\n            else {\n                afk_buckets = [this.buckets.afk[0]];\n            }\n            const query = queries.activityQuery(afk_buckets);\n            const data = await getClient().query(periods, query, {\n                name: 'activityQuery',\n                verbose: true,\n            });\n            const active_history = _.zipObject(periods, _.map(data, pair => _.filter(pair, e => e.data.status == 'not-afk')));\n            this.query_active_history_completed({ active_history });\n        },\n        async query_category_time_by_period({ timeperiod, filter_categories, filter_afk, include_stopwatch, dontQueryInactive, always_active_pattern, }) {\n            // TODO: Needs to be adapted for Android\n            let periods;\n            const count = timeperiod.length[0];\n            const res = timeperiod.length[1];\n            if (res.startsWith('day') && count == 1) {\n                // If timeperiod is a single day, we query the individual hours\n                periods = timeperiodsStrsHoursOfPeriod(timeperiod);\n            }\n            else if (res.startsWith('day') ||\n                (res.startsWith('week') && count == 1) ||\n                (res.startsWith('month') && count == 1)) {\n                // If timeperiod is several days, or a single week/month, we query the individual days\n                periods = timeperiodsStrsDaysOfPeriod(timeperiod);\n            }\n            else if (timeperiod.length[1].startsWith('year') && timeperiod.length[0] == 1) {\n                // If timeperiod a single year, we query the individual months\n                periods = timeperiodsStrsMonthsOfPeriod(timeperiod);\n            }\n            else {\n                console.error(`Unknown timeperiod length: ${timeperiod.length}`);\n            }\n            // Filter out periods that start in the future\n            periods = periods.filter(period => new Date(period.split('/')[0]) < new Date());\n            const signal = getClient().controller.signal;\n            let cancelled = false;\n            signal.onabort = () => {\n                cancelled = true;\n                console.debug('Request aborted');\n            };\n            // Query one period at a time, to avoid timeout on slow queries\n            let data = [];\n            for (const period of periods) {\n                // Not stable\n                //signal.throwIfAborted();\n                if (cancelled) {\n                    throw signal['reason'] || 'unknown reason';\n                }\n                // Only query periods with known data from AFK bucket\n                if (dontQueryInactive && this.active.events.length > 0) {\n                    const start = new Date(period.split('/')[0]);\n                    const end = new Date(period.split('/')[1]);\n                    // Retrieve active time in period\n                    const period_activity = this.active.events.find((e) => {\n                        return start < new Date(e.timestamp) && new Date(e.timestamp) < end;\n                    });\n                    // Check if there was active time\n                    if (!(period_activity && period_activity.duration > 0)) {\n                        data = data.concat([{ cat_events: [] }]);\n                        continue;\n                    }\n                }\n                const isAndroid = this.buckets.android[0] !== undefined;\n                const categories = useCategoryStore().classes_for_query;\n                // TODO: Clean up call, pass QueryParams in fullDesktopQuery as well\n                // TODO: Unify QueryOptions and QueryParams\n                const query = queries.categoryQuery({\n                    bid_browsers: this.buckets.browser,\n                    bid_stopwatch: include_stopwatch && this.buckets.stopwatch.length > 0\n                        ? this.buckets.stopwatch[0]\n                        : undefined,\n                    categories,\n                    filter_categories,\n                    filter_afk,\n                    always_active_pattern,\n                    ...(isAndroid\n                        ? {\n                            bid_android: this.buckets.android[0],\n                        }\n                        : {\n                            bid_afk: this.buckets.afk[0],\n                            bid_window: this.buckets.window[0],\n                        }),\n                });\n                const result = await getClient().query([period], query, {\n                    verbose: true,\n                    name: 'categoryQuery',\n                });\n                data = data.concat(result);\n            }\n            // Zip periods\n            let by_period = _.zipObject(periods, data);\n            // Filter out values that are undefined (no longer needed, only used when visualization was progressive (looks buggy))\n            by_period = _.fromPairs(_.toPairs(by_period).filter(o => o[1]));\n            this.query_category_time_by_period_completed({ by_period });\n        },\n        async query_active_history_android({ timeperiod }) {\n            const periods = timeperiodStrsAroundTimeperiod(timeperiod).filter(tp_str => {\n                return !_.includes(this.active.history, tp_str);\n            });\n            const data = await getClient().query(periods, queries.activityQueryAndroid(this.buckets.android[0]));\n            const active_history = _.zipObject(periods, data);\n            const active_history_events = _.mapValues(active_history, (duration, key) => {\n                return [{ timestamp: key.split('/')[0], duration, data: { status: 'not-afk' } }];\n            });\n            this.query_active_history_completed({ active_history: active_history_events });\n        },\n        set_available() {\n            // TODO: Move to bucketStore on a per-host basis?\n            this.window.available = this.buckets.afk.length > 0 && this.buckets.window.length > 0;\n            this.browser.available =\n                this.buckets.afk.length > 0 &&\n                    this.buckets.window.length > 0 &&\n                    this.buckets.browser.length > 0;\n            this.active.available = this.buckets.afk.length > 0;\n            this.editor.available = this.buckets.editor.length > 0;\n            this.android.available = this.buckets.android.length > 0;\n            this.category.available = this.window.available || this.android.available;\n            this.stopwatch.available = this.buckets.stopwatch.length > 0;\n        },\n        async get_buckets({ host }) {\n            // TODO: Move to bucketStore on a per-host basis?\n            const bucketsStore = useBucketsStore();\n            this.buckets.afk = bucketsStore.bucketsAFK(host);\n            this.buckets.window = bucketsStore.bucketsWindow(host);\n            this.buckets.android = bucketsStore.bucketsAndroid(host);\n            this.buckets.browser = bucketsStore.bucketsBrowser(host);\n            this.buckets.editor = bucketsStore.bucketsEditor(host);\n            this.buckets.stopwatch = bucketsStore.bucketsStopwatch(host);\n            console.log('Available buckets: ', this.buckets);\n            this.buckets.loaded = true;\n        },\n        async load_demo() {\n            // A function to load some demo data (for screenshots and stuff)\n            this.start_loading({});\n            function groupSumEventsBy(events, key, f) {\n                return flow(filter(f), groupBy(f), values, map((es) => {\n                    return { duration: _.sumBy(es, 'duration'), data: { [key]: f(es[0]) } };\n                }), sortBy('duration'), reverse)(events);\n            }\n            const app_events = groupSumEventsBy(window_events, 'app', (e) => e.data.app);\n            const title_events = groupSumEventsBy(window_events, 'title', (e) => e.data.title);\n            const cat_events = groupSumEventsBy(window_events, '$category', (e) => e.data.$category);\n            const url_events = groupSumEventsBy(window_events, 'url', (e) => e.data.url);\n            const domain_events = groupSumEventsBy(window_events, '$domain', (e) => e.data.url === undefined ? '' : new URL(e.data.url).host);\n            const browser_title_events = groupSumEventsBy(window_events.filter((e) => e.data.url), 'title', (e) => e.data.title);\n            this.query_window_completed({\n                duration: _.sumBy(window_events, 'duration'),\n                app_events,\n                title_events,\n                cat_events,\n                active_events: [\n                    {\n                        timestamp: new Date().toISOString(),\n                        duration: 1.5 * 60 * 60,\n                        data: { afk: 'not-afk' },\n                    },\n                ],\n            });\n            this.buckets.browser = ['aw-watcher-firefox'];\n            this.query_browser_completed({\n                duration: _.sumBy(url_events, 'duration'),\n                domains: domain_events,\n                urls: url_events,\n                titles: browser_title_events,\n            });\n            this.buckets.editor = ['aw-watcher-vim'];\n            this.query_editor_completed({\n                duration: 30,\n                files: [{ duration: 10, data: { file: 'test.py' } }],\n                languages: [{ duration: 10, data: { language: 'python' } }],\n                projects: [{ duration: 10, data: { project: 'aw-core' } }],\n            });\n            this.buckets.loaded = true;\n            // fetch startOfDay from settings store\n            const settingsStore = useSettingsStore();\n            const startOfDay = settingsStore.startOfDay;\n            function build_active_history() {\n                const active_history = {};\n                let current_day = moment(get_day_start_with_offset(null, startOfDay));\n                _.map(_.range(0, 30), () => {\n                    const current_day_end = moment(current_day).add(1, 'day');\n                    active_history[`${current_day.format()}/${current_day_end.format()}`] = [\n                        {\n                            timestamp: current_day.format(),\n                            duration: 100 + 900 * Math.random(),\n                            data: { status: 'not-afk' },\n                        },\n                    ];\n                    current_day = current_day.add(-1, 'day');\n                });\n                return active_history;\n            }\n            this.query_active_history_completed({ active_history: build_active_history() });\n        },\n        // mutations\n        start_loading(query_options) {\n            this.loaded = true;\n            this.query_options = query_options;\n            // Resets the store state while waiting for new query to finish\n            this.window.top_apps = null;\n            this.window.top_titles = null;\n            this.browser.duration = 0;\n            this.browser.top_domains = null;\n            this.browser.top_urls = null;\n            this.browser.top_titles = null;\n            this.editor.duration = 0;\n            this.editor.top_files = null;\n            this.editor.top_languages = null;\n            this.editor.top_projects = null;\n            this.category.top = null;\n            this.category.by_period = null;\n            this.active.duration = null;\n            // Ensures that active history isn't being fully reloaded on every date change\n            // (see caching done in query_active_history and query_active_history_android)\n            // FIXME: Better detection of when to actually clear (such as on force reload, hostname change)\n            if (Object.keys(this.active.history).length === 0) {\n                this.active.history = {};\n            }\n        },\n        query_window_completed(data = { app_events: [], title_events: [], cat_events: [], active_events: [], duration: 0 }) {\n            // Set $color and $score for categories\n            if (data.cat_events) {\n                data.cat_events = colorCategories(data.cat_events);\n                data.cat_events = scoreCategories(data.cat_events);\n            }\n            this.window.top_apps = data.app_events;\n            this.window.top_titles = data.title_events;\n            this.category.top = data.cat_events;\n            this.active.duration = data.duration;\n            this.active.events = data.active_events;\n        },\n        query_browser_completed(data = { domains: [], urls: [], titles: [], duration: 0 }) {\n            this.browser.top_domains = data.domains;\n            this.browser.top_urls = data.urls;\n            this.browser.top_titles = data.titles;\n            this.browser.duration = data.duration;\n        },\n        query_stopwatch_completed(data = { stopwatch_events: [] }) {\n            this.stopwatch.top_stopwatches = data.stopwatch_events;\n        },\n        query_editor_completed(data = { duration: 0, files: [], languages: [], projects: [] }) {\n            this.editor.duration = data.duration;\n            this.editor.top_files = data.files;\n            this.editor.top_languages = data.languages;\n            this.editor.top_projects = data.projects;\n        },\n        query_active_history_completed({ active_history } = { active_history: {} }) {\n            this.active.history = {\n                ...this.active.history,\n                ...active_history,\n            };\n        },\n        query_category_time_by_period_completed({ by_period } = { by_period: [] }) {\n            this.category.by_period = by_period;\n        },\n    },\n});\n","var convert = require('./convert'),\n    func = convert('flow', require('../flow'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","module.exports = {\n  'cap': false,\n  'curry': false,\n  'fixed': false,\n  'immutable': false,\n  'rearg': false\n};\n"],"names":["convert","func","placeholder","module","exports","getScoreFromCategory","c","allCats","data","score","name","slice","length","parent","parentCat","find","cc","_isEqual","useCategoryStore","defineStore","state","classes","classes_unsaved_changes","getters","classes_clean","this","map","cleanCategory","classes_hierarchy","hier","build_category_hierarchy","_cloneDeep","_sortBy","id","classes_for_query","filter","rule","type","all_categories","_uniqBy","_flatten","l","i","push","v","join","allCategoriesSelect","categories","entries","text","value","get_category","_this","category_arr","String","console","error","match","annotate","get_category_by_id","_this2","get_category_color","_this3","cat","getColorFromCategory","get_category_score","_this4","category_select","_this5","insertMeta","cats","sort","a","b","concat","actions","load","arguments","undefined","loadClasses","createMissingParents","Object","assign","save","r","saveClasses","updateClass","new_class","log","old_class","old_name","parent_depth","_max","_map","addClass","removeClass","classId","appendClassRule","pattern","regex","restoreDefaultClasses","defaultCategories","clearAll","objectProto","prototype","hasOwnProperty","baseHas","object","key","call","baseIteratee","baseSum","sumBy","array","iteratee","baseFlatten","baseOrderBy","baseRest","isIterateeCall","sortBy","collection","iteratees","result","index","current","assignValue","baseZipObject","zipObject","props","values","baseUniq","uniqBy","assignFunc","valsLength","hasPath","has","path","identity","overRest","setToString","start","arrayProto","Array","nativeReverse","reverse","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","keys","indexOf","_objectWithoutProperties","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","window_events","duration","app","title","url","$category","timeperiodsStrsHoursOfPeriod","timeperiod","timeperiodsHoursOfPeriod","timeperiodToStr","timeperiodsStrsDaysOfPeriod","timeperiodsDaysOfPeriod","timeperiodsStrsMonthsOfPeriod","timeperiodsMonthsOfPeriod","timeperiodStrsAroundTimeperiod","timeperiodsAroundTimeperiod","colorCategories","events","categoryStore","e","scoreCategories","useActivityStore","loaded","window","available","top_apps","top_titles","browser","top_domains","top_urls","editor","top_files","top_languages","top_projects","category","by_period","top","active","history","android","stopwatch","top_stopwatches","query_options","buckets","afk","getActiveHistoryAroundTimeperiod","periods","_history","tp","_has","timestamp","moment","split","format","uncategorizedDuration","uncategorized","uncategorized_duration","total_duration","reduce","acc","ensure_loaded","_asyncToGenerator","_regeneratorRuntime","mark","_callee","settingsStore","bucketsStore","hostnames","wrap","_context","prev","next","useSettingsStore","ensureLoaded","useBucketsStore","info","getClient","abort","force","start_loading","dateToTimeperiod","date","startOfDay","get_buckets","set_available","useMultidevice","hosts","host","bucketsWindow","startsWith","query_multidevice_full","query_desktop_full","query_android","query_window_completed","query_category_time_by_period_completed","query_active_history","query_active_history_android","query_active_history_completed","query_editor","query_editor_completed","query_category_time_by_period","warn","stop","_ref","_callee2","filter_categories","q","_context2","queries","query","errorHandler","sent","reset","_callee3","_context3","query_browser_completed","_ref2","_callee4","filter_afk","always_active_pattern","_context4","host_params","verbose","_ref3","_this6","_callee5","include_audible","include_stopwatch","_context5","bid_window","bid_afk","bid_browsers","bid_stopwatch","query_stopwatch_completed","_ref4","_this7","_callee6","_context6","_ref5","_this8","_callee7","afk_buckets","active_history","_context7","_excluded","tp_str","_includes","Date","bucketsAFK","_zipObject","pair","_filter","status","_ref6","_this9","_callee8","dontQueryInactive","count","res","signal","cancelled","_iterator","_step","_loop","_context9","period","controller","onabort","debug","_createForOfIteratorHelper","end","period_activity","isAndroid","_context8","cat_events","abrupt","_objectSpread","bid_android","s","n","done","delegateYield","t0","t1","f","finish","_fromPairs","_toPairs","o","_ref7","_this10","_callee9","active_history_events","_context10","_mapValues","_ref8","_this11","_callee10","_context11","bucketsAndroid","bucketsBrowser","bucketsEditor","bucketsStopwatch","load_demo","_this12","_callee11","groupSumEventsBy","app_events","title_events","url_events","domain_events","browser_title_events","build_active_history","_context12","current_day","get_day_start_with_offset","_range","current_day_end","add","Math","random","_flow","_filter2","_groupBy","_values","_map2","es","_sumBy","_defineProperty","_reverse","URL","active_events","toISOString","domains","urls","titles","files","file","languages","language","projects","project","stopwatch_events","_ref9","_ref10"],"sourceRoot":""}